-- TCL commands
-- Transaction Control Language command is one of the SQL commands. 
-- TCL commands handle the transactions in a database

SELECT * FROM PARTS;

SAVEPOINT A;

UPDATE
    parts
SET
    cost = 130
WHERE
    part_id = 1;

SELECT
    *
FROM
    parts
WHERE
    part_id = 1;
    
ROLLBACK A;

SELECT
    *
FROM
    parts
WHERE
    part_id = 1;
    
    
UPDATE
    parts
SET
    cost = 135
WHERE
    part_id = 1;
    
COMMIT;

SELECT
    *
FROM
    parts
WHERE
    part_id = 1;


----------------------------------------------------------------------------

-- Oracle index is one of the effective tools for boost the query performance.
-- The following statement creates a new table named members that stores membersâ€™ data

DROP TABLE members;
CREATE TABLE members(
    member_id INT GENERATED BY DEFAULT AS IDENTITY,
    first_name VARCHAR2(100) NOT NULL,
    last_name VARCHAR2(100) NOT NULL,
    gender CHAR(1) NOT NULL,
    dob DATE NOT NULL,
    email VARCHAR2(255) NOT NULL,
    PRIMARY KEY(member_id)
);

-- To load data into the  members table, you use the following script
-- memberdata.txt

INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (1, 'Pepi', 'Elce', 'F', 'pelce0@trellian.com', DATE '1984-03-04');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (2, 'Barr', 'Wabersich', 'M', 'bwabersich1@china.com.cn', DATE '1976-08-04');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (3, 'Gretal', 'Grassick', 'F', 'ggrassick2@deliciousdays.com', DATE '1984-08-15');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (4, 'Byron', 'Angeli', 'M', 'bangeli3@globo.com', DATE '1996-05-24');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (5, 'Birch', 'Vickar', 'M', 'bvickar4@harvard.edu', DATE '1972-09-28');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (6, 'Romy', 'Torvey', 'F', 'rtorvey5@google.com.hk', DATE '1979-01-19');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (7, 'Brien', 'Poole', 'M', 'bpoole6@mozilla.com', DATE '1971-07-16');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (8, 'Mercy', 'Worcester', 'F', 'mworcester7@epa.gov', DATE '1991-07-03');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (9, 'Ernesta', 'Brewett', 'F', 'ebrewett8@xing.com', DATE '1979-01-05');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (10, 'Fran', 'Torrese', 'F', 'ftorrese9@feedburner.com', DATE '1991-10-09');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (11, 'Obadias', 'Dowtry', 'M', 'odowtrya@wikispaces.com', DATE '1973-07-09');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (12, 'Shalom', 'Kincla', 'M', 'skinclab@infoseek.co.jp', DATE '1995-11-06');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (13, 'Rosy', 'Josh', 'F', 'rjoshc@ameblo.jp', DATE '1995-06-28');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (14, 'Christopher', 'Snare', 'M', 'csnared@devhub.com', DATE '1984-07-11');
INSERT INTO members (member_id, first_name, last_name, gender, email, dob) VALUES (15, 'Malchy', 'Jelf', 'M', 'mjelfe@odnoklassniki.ru', DATE '1971-11-10');

-- The members table has a primary key column, therefore,member_id Oracle created a new index for this column. 
-- To view all indexes of a table, you query from the all_indexes view

SELECT 
    index_name, 
    index_type, 
    visibility, 
    status 
FROM 
    all_indexes
WHERE 
    table_name = 'MEMBERS';
    
-- Suppose, you often want to look up members by the last name and you find that the query is quite slow. 
-- To speed up the lookup, you create an index for the last_name column:

CREATE INDEX members_last_name_i 
ON members(last_name);

SELECT 
    index_name, 
    index_type, 
    visibility, 
    status 
FROM 
    all_indexes
WHERE 
    table_name = 'MEMBERS';
    
-- Now, showing the indexes again, you will find that the members table has two indexes

SELECT * FROM members
WHERE last_name = 'Kincla';

-- To check if a query uses the index for lookup or not, you follow these steps:

EXPLAIN PLAN FOR
SELECT * FROM members
WHERE last_name = 'Kincla';

-- This explains the execution plan into the plan_table table.
-- Then, use the DBMS_XPLAN.DISPLAY() procedure to show the content of the plan_table:

SELECT 
    PLAN_TABLE_OUTPUT 
FROM 
    TABLE(DBMS_XPLAN.DISPLAY());
    
DROP INDEX members_last_name_i;

-- Indexes for multiple columns

CREATE INDEX members_name_i
ON members(last_name,first_name);

SELECT * 
FROM members
WHERE last_name LIKE 'A%' 
    AND first_name LIKE 'M%';
    
EXPLAIN PLAN FOR
SELECT * 
FROM members
WHERE last_name LIKE 'A%' 
    AND first_name LIKE 'M%';
    
    
SELECT 
    PLAN_TABLE_OUTPUT 
FROM 
    TABLE(DBMS_XPLAN.DISPLAY());    
